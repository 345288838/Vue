<?php


namespace app\admin\controller;


use think\Controller;
use think\Db;
use think\response\Json;

class Category extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        checkToken();
    }

    public function add(){
        if(!$this->request->isPost()){
            return json([
                "code"=>404,
                "msg"=>'请求方式错误'
            ]);
        }
        $data=$this->request->post();
        $validate=validate('Category');
        if(!$validate->scene('add')->check($data)){
            return json([
                "code"=>404,
                "msg"=>$validate->getError()
            ]);
        }
        $result=Db::table('category')->insert($data);
        if ($result){
            return json([
                "code"=>200,
                "msg"=>'分类添加成功'
            ]);
        }else{
            return json([
                "code"=>404,
                "msg"=>'分类添加失败'
            ]);
        }
    }

    /*
     * 分页   limit  查看符合条件的某一页若干条数据
     * */
    public function select(){
//        if(!$this->request->isPost()){
//            return json([
//                "code"=>404,
//                "msg"=>'请求方式错误'
//            ]);
//        }
//        $data=$this->request->post();
//        $result=Db::table('category')->where(['cid'=>$data['cid']])->find();
//        var_dump($result);
//        if($result){
//            return json([
//                "code"=>200,
//                "msg"=>'查询成功'
//            ]);
//        }else{
//            return json([
//                "code"=>404,
//                "msg"=>'查询失败'
//            ]);
//        }
        $data=$this->request->get();
        if(isset($data['page'])&&!empty($data['page'])){
            $page=$data['page'];
        }else{
            $page=1;
        }
        if(isset($data['limit'])&&!empty($data['limit'])){
            $limit=$data['limit'];
        }else{
            $limit=5;
        }
        $where=[];
        if(isset($data['cname'])&&!empty($data['cname'])){
            $where['cname']=['like','%'.$data['cname'].'%'];
        }
        $category=Db::table('category')->field('cid,cname,cdesc')->where($where)->page($page)->limit($limit)->select();
        $count=Db::table('category')->where($where)->count();//符合指定条件的数据总数
        if($category && $count){
            return json([
                "code"=>200,
                "msg"=>'数据获取成功',
                'data'=>$category,
                'total'=>$count
            ]);
        }else{
            return json([
                "code"=>200,
                "msg"=>'暂无数据',
            ]);
        }
    }

    public function indexall(){
        $category=Db::table('category')->field('cid,cname')->select();//符合指定条件的数据总数
        if($category ){
            return json([
                "code"=>200,
                "msg"=>'数据获取成功',
                'data'=>$category,
            ]);
        }else{
            return json([
                "code"=>200,
                "msg"=>'暂无数据',
            ]);
        }
    }

    public function update(){
        if(!$this->request->isPost()){
            return json([
                "code"=>404,
                "msg"=>'请求方式错误'
            ]);
        }
        $data=$this->request->post();
        $validate=validate('Category');
        if (!$validate->scene('update')->check($data)){
            return json([
                "code"=>404,
                "msg"=>$validate->getError()
            ]);
        }
        $result=Db::table('category')->update($data);
        if($result){
            return json([
                "code"=>200,
                "msg"=>'编辑成功'
            ]);
        }else{
            return json([
                "code"=>404,
                "msg"=>'编辑失败'
            ]);
        }
    }

    public function del(){
        $data=$this->request->get();
        $validate=validate('Category');
        if (!$validate->scene('del')->check($data)){
            return json([
                "code"=>404,
                "msg"=>$validate->getError()
            ]);
        }
        $result=Db::table('category')->where('cid',$data['cid'])->delete();
        if($result){
            return json([
                "code"=>200,
                "msg"=>'数据删除成功',
            ]);
        }else{
            return json([
                "code"=>404,
                "msg"=>'数据删除失败'
            ]);
        }
    }

    public function read(){
        $data=$this->request->get();
        $validate=validate('Category');
        if (!$validate->scene('read')->check($data)){
            return json([
                "code"=>404,
                "msg"=>$validate->getError()
            ]);
        }
        $category=Db::table('category')->where('cid',$data['cid'])->find();
        if($category){
            return json([
                "code"=>200,
                "msg"=>'读取成功',
                'data'=>$category
            ]);
        }else{
            return json([
                "code"=>404,
                "msg"=>'暂无数据'
            ]);
        }
    }
}